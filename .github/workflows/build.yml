name: build
'on': [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Linux / libstdc++ (Debug)"
            os: ubuntu-latest
            cpp_compiler: g++
            c_compiler: gcc
            build_type: Debug
          - name: "Linux / libstdc++ (Release)"
            os: ubuntu-latest
            cpp_compiler: g++
            c_compiler: gcc
            build_type: Release
          - name: "Linux / libc++ (Debug)"
            os: ubuntu-latest
            cpp_compiler: clang++
            c_compiler: clang
            build_type: Debug
          - name: "Linux / libc++ (Release)"
            os: ubuntu-latest
            cpp_compiler: clang++
            c_compiler: clang
            build_type: Release
          - name: "macOS / libc++ (Debug)"
            os: macos-latest
            cpp_compiler: clang++
            c_compiler: clang
            build_type: Debug
          - name: "macOS / libc++ (Release)"
            os: macos-latest
            cpp_compiler: clang++
            c_compiler: clang
            build_type: Release
          - name: "Windows / MSVC STL (Debug)"
            os: windows-latest
            cpp_compiler: cl
            c_compiler: cl
            build_type: Debug
          - name: "Windows / MSVC STL (Release)"
            os: windows-latest
            cpp_compiler: cl
            c_compiler: cl
            build_type: Release
    steps:
    - uses: actions/checkout@v4
    - name: Setup
      id: setup
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        if [[ "${{ matrix.c_compiler }}" == "clang" && "${{ matrix.os }}" == ubuntu* ]]; then
          echo "Clang on Linux setup"
          sudo apt update
          sudo apt install -y clang libc++-dev libc++abi-dev
          echo "stdlib-flag=-stdlib=libc++" >> "$GITHUB_OUTPUT"
        else
          echo "stdlib-flag=" >> "$GITHUB_OUTPUT"
        fi
    - name: Clang setup
      if: 
    - name: Configure
      run: >
        cmake
        -S ${{ github.workspace }}
        -B ${{ steps.setup.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_CXX_FLAGS="${{ steps.setup.outputs.stdlib-flag }}"
        -DBT_BUILD_TESTS=1
    - name: Build
      run: cmake --build ${{ steps.setup.outputs.build-output-dir }} --config ${{ matrix.build_type }}
    - name: Test
      working-directory: ${{ steps.setup.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
